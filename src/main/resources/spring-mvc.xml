<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       ">

    <!--
        查找com.bdqn包下的所有类
        只要被 @Service @Controller ....等注解标记
        那么spring容器会自动为其创建一个bean
    -->
    <context:component-scan base-package="com.*"/>

    <!-- 开启注解驱动 -->
    <mvc:annotation-driven />

    <!-- 静态资源 -->
      <mvc:resources mapping="/css/**" location="/css/"/>
      <mvc:resources mapping="/js/**" location="/js/"/>
      <mvc:resources mapping="/img/**" location="/img/"/>
    <mvc:resources mapping="/ueditor/**" location="/ueditor/"/>
    <!--  <mvc:resources mapping="/fonts/**" location="/fonts/"/>-->

    <!-- 数据源 c3p0 (dbcp)-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!-- 驱动 -->
        <property name="driverClass" value="com.mysql.jdbc.Driver" />

        <!-- 连接字符串 -->
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/excel"/>

        <!-- 用户名 -->
        <property name="user" value="root"/>

        <!-- 密码 -->
        <property name="password" value="root"/>

         <!-- 最小连接数 -->
         <property name="minPoolSize" value="4" />
         <!-- 最大连接数	 	default:15 -->
         <property name="maxPoolSize" value="20" />
         <!-- 初始化连接数	defualt:3  -->
         <property name="initialPoolSize" value="4"/>
         <!-- 空闲时间 		defualt:0  -->
         <property name="maxIdleTime" value="60"/>
         <!-- 当连接数耗尽时，再次获取	default:3 -->
         <property name="acquireIncrement" value="4"/>
    </bean>

    <!--文件上传配置-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">

    </bean>
    <!-- sqlSessionFactory -->
    <bean id="SqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">

        <!-- 数据源 -->
        <!-- 找到当前bean所对应类中的 属性/对象，并为其注入一个... -->
        <property name="dataSource" ref="dataSource"/>

        <!-- mybatis配置文件 -->

        <!--
            SQL映射文件 *Mapper.xml
            通过spring 加载....com/mapping 目录下 所有以Mapper.xml结尾的文件
        -->
        <property name="mapperLocations" value="classpath:com/mapping/*Mapper.xml"/>

        <!-- 别名 -->
        <property name="typeAliasesPackage" value="com.pojo"/>

    </bean>


    <!-- 让spring为dao层创建bean -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">

        <!--指定SqlSessionFactoryBean的名称-->
        <property name="sqlSessionFactoryBeanName" value="SqlSessionFactoryBean"/>

        <!--指定dao接口所在的包-->
        <property name="basePackage" value="com.dao"/>

    </bean>


    <!-- 通用 Mapper -->
    <!--替换了org.mybatis.spring.mapper.MapperScannerConfigurer-->
    <!--<bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">-->
        <!--<property name="basePackage" value="cn.com.bluemoon.bd.service.spider.dao"/>-->
        <!--<property name="properties">-->
            <!--<value>-->
                <!--mappers=tk.mybatis.mapper.common.Mapper-->
            <!--</value>-->
        <!--</property>-->
    <!--</bean>-->

    <!--   &lt;!&ndash; 创建事务管理器 &ndash;&gt;
       <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
           <property name="dataSource" ref="dataSource"/>
       </bean>


       &lt;!&ndash; 声明式事务 &ndash;&gt;
       <aop:config>

           &lt;!&ndash; 切入点 com.bdqn.service包下的所有类中的所有方法（无论是否带参）&ndash;&gt;
           <aop:pointcut id="transactionPointcut" expression="execution(* com.bdqn.service.*.*(..))"/>

           &lt;!&ndash; 增强处理与切入点的管理器 &ndash;&gt;
           <aop:advisor advice-ref="transactionAdvice" pointcut-ref="transactionPointcut"/>

       </aop:config>

       &lt;!&ndash; 增强处理 &ndash;&gt;
       <tx:advice id="transactionAdvice" transaction-manager="transactionManager">

           &lt;!&ndash; 事务规则 &ndash;&gt;
           <tx:attributes>
               <tx:method name="add*" />
               <tx:method name="*" propagation="NOT_SUPPORTED"/>
           </tx:attributes>

       </tx:advice>-->


</beans>